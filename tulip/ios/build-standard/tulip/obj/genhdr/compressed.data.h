#define MP_MAX_UNCOMPRESSED_TEXT_LEN (73)
MP_COMPRESSED_DATA("can'\364argumen\364functio\356forma\364objec\364argument\363positiona\354'%q\247no\364strin\347'%s\247mus\364specifie\362invali\344keywor\344conver\364t\357require\344ar\347attribut\345b\345o\346%\344empt\371fo\362isn'\364unsupporte\344assignmen\364i\356outsid\345\341generato\362inde\370supporte\344typ\345lengt\350wit\350comple\370doesn'\364erro\362missin\347rang\345n\357synta\370fro\355nam\345to\357afte\362expecte\344fiel\344foun\344give\356multipl\345need\363nonloca\354overflo\367sequenc\345tupl\345allowe\344ha\363indice\363in\364ou\364struct\272a\356lis\364o\362zer\357impor\364numbe\362shoul\344specificatio\356value\363incompatibl\345issubclass(\251%\363bu\364byte\363clas\363i\363ke\371take\363valu\345allocatio\356conversio\356expressio\356identifie\362incomplet\345unexpecte\344.mp\371automati\343cod\345dic\364expectin\347hea\360integers\254numberin\347operatio\356redefine\344sel\346%\361negativ\345defaul\364failed\254intege\362se\364suppor\364unknow\356buffe\362divid\345inden\364manua\354memor\371mktim\345modul\345switc\350unpac\353asyn\343a\364extr\341leve\354oute\362smal\354wron\347'%c\247arg\363fil\345ful\354")
MP_MATCH_COMPRESSED("%c needs int or char", "\377%c\265\275\302char")
MP_MATCH_COMPRESSED("%q index out of range", "\377\344\240\276\225\251")
MP_MATCH_COMPRESSED("%q indices must be integers, not %s", "\377\344\274\213\224\337\210\313")
MP_MATCH_COMPRESSED("%q() takes %d positional arguments but %d were given", "\377%q()\321\226\206\205\314\226were\263")
MP_MATCH_COMPRESSED("'%q' argument required", "\377\207\201\221")
MP_MATCH_COMPRESSED("'%s' object doesn't support item assignment", "\377\212\204\246\352item\233")
MP_MATCH_COMPRESSED("'%s' object doesn't support item deletion", "\377\212\204\246\352item deletion")
MP_MATCH_COMPRESSED("'%s' object has no attribute '%q'", "\377\212\204\273\252\223\207")
MP_MATCH_COMPRESSED("'%s' object isn't an iterator", "\377\212\204\231\300iterator")
MP_MATCH_COMPRESSED("'%s' object isn't callable", "\377\212\204\231callable")
MP_MATCH_COMPRESSED("'%s' object isn't iterable", "\377\212\204\231iterable")
MP_MATCH_COMPRESSED("'%s' object isn't subscriptable", "\377\212\204\231subscriptable")
MP_MATCH_COMPRESSED("'=' alignment not allowed in string format specifier", "\377'=' alignment\210\272\234\211\203\214")
MP_MATCH_COMPRESSED("'await' outside function", "\377'await'\235\202")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377'break'/'continue'\235loop")
MP_MATCH_COMPRESSED("'return' outside function", "\377'return'\235\202")
MP_MATCH_COMPRESSED("'yield' outside function", "\377'yield'\235\202")
MP_MATCH_COMPRESSED("* arg after **", "\377*\222\257**")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377*x\213\224\233target")
MP_MATCH_COMPRESSED("0.0 to a complex power", "\3770.0\220\236\245power")
MP_MATCH_COMPRESSED("I/O operation on closed file", "\377I/O\341on closed\376")
MP_MATCH_COMPRESSED("IV", "IV")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377LHS\225\216\222\213\224\300id")
MP_MATCH_COMPRESSED("[addrinfo error %d]", "\377[addrinfo\247%d]")
MP_MATCH_COMPRESSED("__init__() should return None, not '%s'", "\377__init__()\306return None,\210\212")
MP_MATCH_COMPRESSED("abort() called", "abort() called")
MP_MATCH_COMPRESSED("address %08x is not aligned to %d bytes", "\377address %08x\317\210aligned\220\226\315")
MP_MATCH_COMPRESSED("arg is an empty sequence", "\377\222\317\300\227\270")
MP_MATCH_COMPRESSED("arg must be user-type", "\377\222\213\224user-type")
MP_MATCH_COMPRESSED("argument name reused", "\377\201\255reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\201num/types mismatch")
MP_MATCH_COMPRESSED("argument should be a '%q' not a '%q'", "\377\201\306\224\236\207\210\236\207")
MP_MATCH_COMPRESSED("array/bytes required on right side", "\377array/bytes\221on right side")
MP_MATCH_COMPRESSED("async for/with outside async function", "\377\365for/with\235\365\202")
MP_MATCH_COMPRESSED("attributes not supported", "\377attributes\210\241")
MP_MATCH_COMPRESSED("bad compile mode", "bad compile mode")
MP_MATCH_COMPRESSED("bad typecode", "bad typecode")
MP_MATCH_COMPRESSED("bits must be 32 or less", "\377bits\213\22432\302less")
MP_MATCH_COMPRESSED("blksize % 16", "blksize % 16")
MP_MATCH_COMPRESSED("buffer too small", "\377\354\256\372")
MP_MATCH_COMPRESSED("bytecode overflow", "\377bytecode\267")
MP_MATCH_COMPRESSED("bytes value out of range", "\377\315\322\276\225\251")
MP_MATCH_COMPRESSED("can't add special method to already-subclassed class", "\377\200add special method\220already-subclassed\316")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\200assign\220\325")
MP_MATCH_COMPRESSED("can't cancel self", "\377\200cancel\343")
MP_MATCH_COMPRESSED("can't convert %s to complex", "\377\200\217\313\220\245")
MP_MATCH_COMPRESSED("can't convert %s to float", "\377\200\217\313\220float")
MP_MATCH_COMPRESSED("can't convert %s to int", "\377\200\217\313\220\275")
MP_MATCH_COMPRESSED("can't convert '%q' object to %q implicitly", "\377\200\217\207\204\220\344implicitly")
MP_MATCH_COMPRESSED("can't convert NaN to int", "\377\200\217NaN\220\275")
MP_MATCH_COMPRESSED("can't convert inf to int", "\377\200\217inf\220\275")
MP_MATCH_COMPRESSED("can't create '%q' instances", "\377\200create\207instances")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\200declare\266\234\371\333")
MP_MATCH_COMPRESSED("can't delete expression", "\377\200delete\325")
MP_MATCH_COMPRESSED("can't encrypt & decrypt", "\377\200encrypt & decrypt")
MP_MATCH_COMPRESSED("can't import name %q", "\377\200\304\255\344")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\200perform relative\304")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\200send non-None\322\220\236just-started\237")
MP_MATCH_COMPRESSED("can't set attribute", "\377\200\351\223")
MP_MATCH_COMPRESSED("can't switch from automatic field numbering to manual field specification", "\377\200\363\254\332\261\340\220\357\261\307")
MP_MATCH_COMPRESSED("can't switch from manual field specification to automatic field numbering", "\377\200\363\254\357\261\307\220\332\261\340")
MP_MATCH_COMPRESSED("can't truncate-divide a complex number", "\377\200truncate-divide\236\245\305")
MP_MATCH_COMPRESSED("can't unambiguously get sizeof scalar", "\377\200unambiguously get sizeof scalar")
MP_MATCH_COMPRESSED("can't wait", "\377\200wait")
MP_MATCH_COMPRESSED("chr() arg not in range(0x110000)", "\377chr()\222\210\234range(0x110000)")
MP_MATCH_COMPRESSED("complex divide by zero", "\377\245\355by\303")
MP_MATCH_COMPRESSED("compression header", "compression header")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\346'except'\213\224last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377\334update\270\273\373\243")
MP_MATCH_COMPRESSED("divide by zero", "\377\355by\303")
MP_MATCH_COMPRESSED("empty", "\377\227")
MP_MATCH_COMPRESSED("empty heap", "\377\227\336")
MP_MATCH_COMPRESSED("empty separator", "\377\227separator")
MP_MATCH_COMPRESSED("end of format while looking for conversion specifier", "\377end\225\203while looking\230\324\214")
MP_MATCH_COMPRESSED("error in regex", "\377\247\234regex")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\213derive\254BaseException")
MP_MATCH_COMPRESSED("expected ':' after format specifier", "\377\260':'\257\203\214")
MP_MATCH_COMPRESSED("expecting just a value for set", "\377\335just\236\322\230\351")
MP_MATCH_COMPRESSED("expecting key:value for dict", "\377\335key:value\230\334")
MP_MATCH_COMPRESSED("extra keyword arguments given", "\377\367\216\205\263")
MP_MATCH_COMPRESSED("extra positional arguments given", "\377\367\206\205\263")
MP_MATCH_COMPRESSED("format needs a dict", "\377\203\265\236\334")
MP_MATCH_COMPRESSED("format string didn't convert all arguments", "\377\203\211didn't\217all\205")
MP_MATCH_COMPRESSED("format string needs more arguments", "\377\203\211\265more\205")
MP_MATCH_COMPRESSED("full", "\377\377")
MP_MATCH_COMPRESSED("function doesn't take keyword arguments", "\377\202\246take\216\205")
MP_MATCH_COMPRESSED("function expected at most %d arguments, got %d", "\377\202\260\366most\226arguments, got\226")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\202got\264\310\230\201\207")
MP_MATCH_COMPRESSED("function missing %d required positional arguments", "\377\202\250\226\221\206\205")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\202\250keyword-only\201")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\202\250\221\216\201\207")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\202\250\221\206\201#%d")
MP_MATCH_COMPRESSED("function takes %d positional arguments but %d were given", "\377\202\321\226\206\205\314\226were\263")
MP_MATCH_COMPRESSED("generator already executing", "\377\237already executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\237ignored GeneratorExit")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\237raised StopIteration")
MP_MATCH_COMPRESSED("hash is final", "\377hash\317final")
MP_MATCH_COMPRESSED("heap must be a list", "\377\336\213\224\236\301")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\326\342as global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\326\342as\266")
MP_MATCH_COMPRESSED("import * not at module level", "\377\304*\210\366\362\370")
MP_MATCH_COMPRESSED("incompatible .mpy arch", "\377\311\331arch")
MP_MATCH_COMPRESSED("incompatible .mpy file", "\377\311\331\376")
MP_MATCH_COMPRESSED("incomplete format", "\377\327\203")
MP_MATCH_COMPRESSED("incomplete format key", "\377\327\203\320")
MP_MATCH_COMPRESSED("incorrect padding", "incorrect padding")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\2222\213\224>= 2 and <= 36")
MP_MATCH_COMPRESSED("integer needed", "\377\350needed")
MP_MATCH_COMPRESSED("invalid cert", "\377\215cert")
MP_MATCH_COMPRESSED("invalid format", "\377\215\203")
MP_MATCH_COMPRESSED("invalid format specifier", "\377\215\203\214")
MP_MATCH_COMPRESSED("invalid key", "\377\215\320")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\215micropython decorator")
MP_MATCH_COMPRESSED("invalid mktime usage", "\377\215\361usage")
MP_MATCH_COMPRESSED("invalid syntax", "\377\215\253")
MP_MATCH_COMPRESSED("invalid syntax for number", "\377\215\253\230\305")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\312\2221\213\224\236\316")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\312\2222\213\224\236\316\302\236\271\225classes")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join expects\236\301\225str/bytes objects consistent\244\343\204")
MP_MATCH_COMPRESSED("key", "\377\320")
MP_MATCH_COMPRESSED("keyword argument(s) not implemented - use normal args instead", "\377\216argument(s)\210implemented - use normal\375instead")
MP_MATCH_COMPRESSED("lhs and rhs should be compatible", "\377lhs and rhs\306\224compatible")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced before\233")
MP_MATCH_COMPRESSED("malformed f-string", "malformed f-string")
MP_MATCH_COMPRESSED("math domain error", "\377math domain\247")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\360\323\347allocating %u\315")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\360\323\347\336\317locked")
MP_MATCH_COMPRESSED("memoryview offset too large", "\377memoryview offset\256large")
MP_MATCH_COMPRESSED("mktime needs a tuple of length 8 or 9", "\377\361\265\236\271\225\2438\3029")
MP_MATCH_COMPRESSED("mode", "mode")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\264*x\234\233")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\264bases have instance lay-out conflict")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\213use\216\201\230\320\202")
MP_MATCH_COMPRESSED("name '%q' isn't defined", "\377\255\207\231defined")
MP_MATCH_COMPRESSED("name too long", "\377\255\256long")
MP_MATCH_COMPRESSED("native code in .mpy unsupported", "\377native\333\234\331\232")
MP_MATCH_COMPRESSED("need more than %d values to unpack", "\377need more than\226\310\220\364")
MP_MATCH_COMPRESSED("negative factorial", "\377\345factorial")
MP_MATCH_COMPRESSED("negative shift count", "\377\345shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\252active exception\220reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\252binding\230\266\262")
MP_MATCH_COMPRESSED("no module named '%q'", "\377\252\362named\207")
MP_MATCH_COMPRESSED("no such attribute", "\377\252such\223")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\201follows\346\201")
MP_MATCH_COMPRESSED("non-hex digit found", "\377non-hex digit\262")
MP_MATCH_COMPRESSED("not a constant", "\377\210\236constant")
MP_MATCH_COMPRESSED("object '%s' isn't a tuple or list", "\377\204\212\231\236\271\302\301")
MP_MATCH_COMPRESSED("object not in sequence", "\377\204\210\234\270")
MP_MATCH_COMPRESSED("object of type '%s' has no len()", "\377\204\225\242\212\273\252len()")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\204\244\354protocol\221")
MP_MATCH_COMPRESSED("odd-length string", "\377odd-length\211")
MP_MATCH_COMPRESSED("only slices with step=1 (aka None) are supported", "\377only slices\244step=1 (aka None) are\241")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord() expected a character, but string of length %d found", "\377ord()\260\236character,\314\211\225\243\226\262")
MP_MATCH_COMPRESSED("output too small", "\377output\256\372")
MP_MATCH_COMPRESSED("overflow converting long int to machine word", "\377\267converting long\275\220machine word")
MP_MATCH_COMPRESSED("pop from an empty set", "\377pop\254\300\227\351")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\254\227\301")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\317\227")
MP_MATCH_COMPRESSED("positional arg after **", "\377\206\222\257**")
MP_MATCH_COMPRESSED("positional arg after keyword arg", "\377\206\222\257\216\222")
MP_MATCH_COMPRESSED("pow() with 3 arguments requires integers", "\377pow()\2443\205requires integers")
MP_MATCH_COMPRESSED("raw f-strings are not supported", "\377raw f-strings are\210\241")
MP_MATCH_COMPRESSED("requested length %d but object has length %d", "\377requested\243\226\314\204\273\243\226")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("schedule queue full", "\377schedule queue\377")
MP_MATCH_COMPRESSED("sign not allowed in string format specifier", "\377sign\210\272\234\211\203\214")
MP_MATCH_COMPRESSED("sign not allowed with integer format specifier 'c'", "\377sign\210\272\244\350\203\214'c'")
MP_MATCH_COMPRESSED("single '}' encountered in format string", "\377single '}' encountered\234\203\211")
MP_MATCH_COMPRESSED("slice step can't be zero", "\377slice step\200\224\303")
MP_MATCH_COMPRESSED("splitting with sub-captures", "\377splitting\244sub-captures")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\274")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream\341\210\241")
MP_MATCH_COMPRESSED("string argument without an encoding", "\377\211\201without\300encoding")
MP_MATCH_COMPRESSED("string index out of range", "\377\211\240\276\225\251")
MP_MATCH_COMPRESSED("string indices must be integers, not %s", "\377\211\274\213\224\337\210\313")
MP_MATCH_COMPRESSED("struct: can't index", "\377\277\200\240")
MP_MATCH_COMPRESSED("struct: index out of range", "\377\277\240\276\225\251")
MP_MATCH_COMPRESSED("struct: no fields", "\377\277\252fields")
MP_MATCH_COMPRESSED("substring not found", "\377substring\210\262")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\200find\343")
MP_MATCH_COMPRESSED("syntax error in JSON", "\377\253\247\234JSON")
MP_MATCH_COMPRESSED("syntax error in uctypes descriptor", "\377\253\247\234uctypes descriptor")
MP_MATCH_COMPRESSED("ticks interval overflow", "\377ticks interval\267")
MP_MATCH_COMPRESSED("too many args", "\377\256many\375")
MP_MATCH_COMPRESSED("too many values to unpack (expected %d)", "\377\256many\310\220\364(expected %d)")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\271\240\276\225\251")
MP_MATCH_COMPRESSED("type '%q' isn't an acceptable base type", "\377\242\207\231\300acceptable base\242")
MP_MATCH_COMPRESSED("type object '%q' has no attribute '%q'", "\377\242\204\207\273\252\223\207")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\242\3211\3023\205")
MP_MATCH_COMPRESSED("unexpected indent", "\377\330\356")
MP_MATCH_COMPRESSED("unexpected keyword argument '%q'", "\377\330\216\201\207")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\255escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\246match any\371\356\370")
MP_MATCH_COMPRESSED("unknown conversion specifier %c", "\377\353\324\214%c")
MP_MATCH_COMPRESSED("unknown format code '%c' for object of type '%s'", "\377\353\203\333\374\230\204\225\242\212")
MP_MATCH_COMPRESSED("unmatched '{' in format", "\377unmatched '{'\234\203")
MP_MATCH_COMPRESSED("unreadable attribute", "\377unreadable\223")
MP_MATCH_COMPRESSED("unsupported format character '%c' (0x%x) at index %d", "\377\232\203character\374(0x%x)\366\240\226")
MP_MATCH_COMPRESSED("unsupported type for %q: '%s'", "\377\232\242\230%q:\212")
MP_MATCH_COMPRESSED("unsupported types for %q: '%s', '%s'", "\377\232types\230%q: '%s',\212")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\373\305\225\205")
MP_MATCH_COMPRESSED("zero step", "\377\303step")
// Total input length:      6028
// Total compressed length: 2868
// Total data length:       1134
// Predicted saving:        2026

// gzip length:             3393
// Percentage of gzip:      117.9%
// zlib length:             3381
// Percentage of zlib:      118.4%
